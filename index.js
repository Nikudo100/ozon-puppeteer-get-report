const puppeteer = require('puppeteer');
const fs = require('fs');
const path = require('path');
const xlsx = require('xlsx');

const COOKIE_PATH = path.resolve(__dirname, 'cookies.json');

async function main() {
  const downloadPath = path.resolve(__dirname, 'downloads');
  if (!fs.existsSync(downloadPath)) fs.mkdirSync(downloadPath);

  const browser = await puppeteer.launch({
    executablePath: puppeteer.executablePath(),
    headless: false,
    defaultViewport: null,
    args: [
      '--window-size=1200,800',
      '--disable-dev-shm-usage',
      '--no-sandbox',
      '--disable-setuid-sandbox',
      '--disable-gpu'
    ]
  });

  const [page] = await browser.pages();

  const client = await page.target().createCDPSession();
  await client.send('Page.setDownloadBehavior', {
    behavior: 'allow',
    downloadPath: downloadPath,
  });

  await page.goto('https://seller.ozon.ru/app/finances/warehousing-cost', {
    waitUntil: 'networkidle2',
  });

  // –ó–∞–≥—Ä—É–∑–∫–∞ –∏–ª–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫—É–∫–∏
  if (fs.existsSync(COOKIE_PATH) && fs.readFileSync(COOKIE_PATH, 'utf-8').trim() !== '') {
    const cookies = JSON.parse(fs.readFileSync(COOKIE_PATH));
    await page.setCookie(...cookies);
    console.log('‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –∫—É–∫–∏');
    await page.reload({ waitUntil: 'networkidle2' });
  } else {
    console.log('üîê –ê–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å –≤—Ä—É—á–Ω—É—é, –∑–∞—Ç–µ–º –Ω–∞–∂–º–∏—Ç–µ ENTER –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ');
    await new Promise(resolve => process.stdin.once('data', () => resolve()));
    const cookies = await page.cookies();
    fs.writeFileSync(COOKIE_PATH, JSON.stringify(cookies, null, 2));
    console.log('‚úÖ –ö—É–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã');
  }

  try {
    await new Promise(resolve => setTimeout(resolve, 1000));
  
    const result = await page.evaluate(() => {
      const buttons = Array.from(document.querySelectorAll('button'));
      const declineButton = buttons.find(btn =>
        btn.textContent.trim().toLowerCase().includes("–±–æ–ª—å—à–µ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å")
      );
      if (declineButton) {
        declineButton.click();
        return true;
      }
      return false;
    });

    if (result) {
      console.log('‚úÖ –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
    } else {
      console.log('‚ÑπÔ∏è –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ (–ø–æ —Ç–µ–∫—Å—Ç—É)');
    }
  } catch (err) {
    console.log('‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –∑–∞–∫—Ä—ã—Ç—å –ø–æ–ø–∞–ø:', err.message);
  }


  async function clickUntilPopoverOpens(page) {
    const containerSelector = '.index_buttons_GAN3c';
    const popoverSelector = '.popover-module_fixReferenceSize__16BR';
    const buttonText = '–°–∫–∞—á–∞—Ç—å –æ—Ç—á—ë—Ç';
  
    await page.waitForSelector(containerSelector);
  
    let ariaExpanded = await page.$eval(popoverSelector, el => el.getAttribute('aria-expanded'));
    let attempts = 0;
    const maxAttempts = 10;
  
    while (ariaExpanded !== 'true') {
      if (attempts >= maxAttempts) {
        throw new Error('–ü–æ–ø–∞–ø –Ω–µ –æ—Ç–∫—Ä—ã–ª—Å—è –ø–æ—Å–ª–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ–ø—ã—Ç–æ–∫');
      }
      attempts++;
  
      const buttons = await page.$$(`${containerSelector} button`);
  
      let clicked = false;
  
      for (const btn of buttons) {
        const text = await page.evaluate(el => el.innerText.trim(), btn);
        if (text.includes(buttonText)) {
          await btn.click();
          console.log('–ö–ª–∏–∫–Ω—É–ª–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É "–°–∫–∞—á–∞—Ç—å –æ—Ç—á—ë—Ç", –ø–æ–ø—ã—Ç–∫–∞ #' + attempts);
          clicked = true;
          break;
        }
      }
      if (attempts == 2){
        return
      }
      if (!clicked) {
        throw new Error('–ö–Ω–æ–ø–∫–∏ "–°–∫–∞—á–∞—Ç—å –æ—Ç—á—ë—Ç" –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–µ');
      }
  
      await new Promise(resolve => setTimeout(resolve, 1000));
  
      ariaExpanded = await page.$eval(popoverSelector, el => el.getAttribute('aria-expanded'));
      console.log('–¢–µ–∫—É—â–µ–µ aria-expanded:', ariaExpanded);
    }
  
    console.log('–ü–æ–ø–∞–ø –æ—Ç–∫—Ä—ã—Ç (aria-expanded="true")');
  }
  
  // –ò—Å–ø–æ–ª—å–∑—É–π —ç—Ç—É —Ñ—É–Ω–∫—Ü–∏—é –≤ –Ω—É–∂–Ω–æ–º –º–µ—Å—Ç–µ —Ç–≤–æ–µ–≥–æ –∫–æ–¥–∞
  await clickUntilPopoverOpens(page);
  
  try {
    // await page.waitForSelector('.modal-module_modalContent_', { timeout: 15000 });
    // console.log('‚úÖ –ü–æ–ø–∞–ø –∑–∞–≥—Ä—É–∑–∫–∏ –æ—Ç—á—ë—Ç–∞ –ø–æ—è–≤–∏–ª—Å—è');

    const radioByProducts = await page.waitForSelector('input[type="radio"][value="ByProducts"]');
    await radioByProducts.click();
    console.log('‚úÖ –í—ã–±—Ä–∞–Ω –≤–∞—Ä–∏–∞–Ω—Ç "–ü–æ —Ç–æ–≤–∞—Ä–∞–º"');

    const buttons = await page.$$('.index_downloadReportConfirmButton_2P5UK');

    let foundDownloadButton = false;
    for (const btn of buttons) {
      const text = await page.evaluate(el => el.textContent.trim(), btn);
      if (text === '–°–∫–∞—á–∞—Ç—å') {
        await btn.click();
        console.log('‚úÖ –ö–Ω–æ–ø–∫–∞ "–°–∫–∞—á–∞—Ç—å" –Ω–∞–∂–∞—Ç–∞');
        foundDownloadButton = true;
        break;
      }
    }

    if (!foundDownloadButton) {
      throw new Error('–ù–µ –Ω–∞–π–¥–µ–Ω–∞ –∫–Ω–æ–ø–∫–∞ "–°–∫–∞—á–∞—Ç—å" –≤ –ø–æ–ø–∞–ø–µ');
    }

    console.log('‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏...');
    await new Promise(resolve => setTimeout(resolve, 6000));

    const downloadedFileName = fs.readdirSync(downloadPath)
      .filter(file => file.endsWith('.xlsx'))
      .sort((a, b) => {
        return fs.statSync(path.join(downloadPath, b)).mtime.getTime() -
               fs.statSync(path.join(downloadPath, a)).mtime.getTime();
      })[0];

    if (!downloadedFileName) {
      throw new Error('–ó–∞–≥—Ä—É–∑–∫–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å ‚Äî XLSX —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω');
    }

    console.log('‚úÖ –û—Ç—á—ë—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω:', downloadedFileName);
  } catch (err) {
    console.log('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –æ—Ç—á—ë—Ç–∞:', err.message);
  }
}

main().catch(console.error);
